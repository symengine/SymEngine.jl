var documenterSearchIndex = {"docs":
[{"location":"apidocs/#API-Documentation","page":"API Documentation","title":"API Documentation","text":"","category":"section"},{"location":"apidocs/#SymEngine","page":"API Documentation","title":"SymEngine","text":"","category":"section"},{"location":"apidocs/","page":"API Documentation","title":"API Documentation","text":"Modules = [SymEngine]","category":"page"},{"location":"apidocs/#SymEngine.AsciiArt","page":"API Documentation","title":"SymEngine.AsciiArt","text":"show symengine logo \n\n\n\n\n\n","category":"type"},{"location":"apidocs/#LinearAlgebra.lu-Tuple{SymEngine.CDenseMatrix}","page":"API Documentation","title":"LinearAlgebra.lu","text":"LU decomposition for CDenseMatrix, dense matrices of symbolic values\n\nAlso: lufact(a, val{:false}) for non-pivoting lu factorization\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.N-Tuple{Integer}","page":"API Documentation","title":"SymEngine.N","text":"Convert a SymEngine numeric value into a Julian number\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.coeff-Tuple{Basic, Any, Any}","page":"API Documentation","title":"SymEngine.coeff","text":"Return coefficient of x^n term, x a symbol\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.free_symbols-Tuple{Basic}","page":"API Documentation","title":"SymEngine.free_symbols","text":"Return free symbols in an expression as a Set\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.function_symbols-Tuple{Basic}","page":"API Documentation","title":"SymEngine.function_symbols","text":"Return function symbols in an expression as a Set\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.get_args-Tuple{Basic}","page":"API Documentation","title":"SymEngine.get_args","text":"Return arguments of a function call as a vector of Basic objects\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.get_libversion-Tuple{}","page":"API Documentation","title":"SymEngine.get_libversion","text":"Get libsymengine version\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.get_name-Tuple{Basic}","page":"API Documentation","title":"SymEngine.get_name","text":"Return name of function symbol\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.get_symbol-Tuple{Symbol}","page":"API Documentation","title":"SymEngine.get_symbol","text":"Helper function to lookup a symbol from libsymengine\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.get_symengine_class-Tuple{Basic}","page":"API Documentation","title":"SymEngine.get_symengine_class","text":"Get SymEngine class of an object (e.g. 1=>:Integer, 1//2 =:Rational, sin(x) => :Sin, ...\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.has_symbol-Tuple{Union{Basic, SymEngine.BasicType}, Union{Basic, SymEngine.BasicType}}","page":"API Documentation","title":"SymEngine.has_symbol","text":"Does expression contain the symbol\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.have_component-Tuple{String}","page":"API Documentation","title":"SymEngine.have_component","text":"Check whether libsymengine was compiled with comp\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.is_symbol-Tuple{Union{Basic, SymEngine.BasicType}}","page":"API Documentation","title":"SymEngine.is_symbol","text":"Is expression a symbol\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.lambdify","page":"API Documentation","title":"SymEngine.lambdify","text":"lambdify\n\nevaluates a symbolless expression or returns a function\n\n\n\n\n\n","category":"function"},{"location":"apidocs/#SymEngine.series","page":"API Documentation","title":"SymEngine.series","text":"Series expansion to order n about point x0\n\n\n\n\n\n","category":"function"},{"location":"apidocs/#SymEngine.subs-Union{Tuple{S}, Tuple{T}, Tuple{T, S, Any}} where {T<:Union{Basic, SymEngine.BasicType}, S<:Union{Basic, SymEngine.BasicType}}","page":"API Documentation","title":"SymEngine.subs","text":"subs\n\nSubstitute values into a symbolic expression.\n\nExamples\n\n@vars x y\nex = x^2 + y^2\nsubs(ex, x, 1) # 1 + y^2\nsubs(ex, (x, 1)) # 1 + y^2\nsubs(ex, (x, 1), (y,x)) # 1 + x^2, values are substituted left to right.\nsubs(ex, x=>1)  # alternate to subs(x, (x,1))\nsubs(ex, x=>1, y=>1) # ditto\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.symbols-Tuple{Symbol}","page":"API Documentation","title":"SymEngine.symbols","text":"symbols(::Symbol) construct symbolic value\n\nExamples:\n\na = symbols(:a)\nx = symbols(\"x\")\nx,y = symbols(\"x y\")\nx,y,z = symbols(\"x,y,z\")\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#SymEngine.@vars-Tuple","page":"API Documentation","title":"SymEngine.@vars","text":"@vars x y[1:5] z()\n\nMacro to define 1 or more variables or symbolic function\n\nExample\n\n@vars x y z\n@vars x[1:4]\n@vars u(), x\n\n\n\n\n\n","category":"macro"},{"location":"apidocs/#Index","page":"API Documentation","title":"Index","text":"","category":"section"},{"location":"apidocs/","page":"API Documentation","title":"API Documentation","text":"","category":"page"},{"location":"#SymEngine.jl-Documentation","page":"SymEngine.jl Documentation","title":"SymEngine.jl Documentation","text":"","category":"section"},{"location":"#About","page":"SymEngine.jl Documentation","title":"About","text":"","category":"section"},{"location":"","page":"SymEngine.jl Documentation","title":"SymEngine.jl Documentation","text":"This site contains the documentation and julia language bindings for the Symengine project.","category":"page"},{"location":"#Contents","page":"SymEngine.jl Documentation","title":"Contents","text":"","category":"section"},{"location":"","page":"SymEngine.jl Documentation","title":"SymEngine.jl Documentation","text":"","category":"page"},{"location":"#Installation","page":"SymEngine.jl Documentation","title":"Installation","text":"","category":"section"},{"location":"","page":"SymEngine.jl Documentation","title":"SymEngine.jl Documentation","text":"The package and dependencies can be obtained with standard Pkg calls.","category":"page"},{"location":"","page":"SymEngine.jl Documentation","title":"SymEngine.jl Documentation","text":"julia> Pkg.add(\"SymEngine\")","category":"page"},{"location":"basicUsage/#Quick-Start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"Derived from the project README on GitHub.","category":"page"},{"location":"basicUsage/#Scalar-Variables","page":"Quick Start","title":"Scalar Variables","text":"","category":"section"},{"location":"basicUsage/#Definitions","page":"Quick Start","title":"Definitions","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"Multiple equivalent methods of variable declaration are supported.","category":"page"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> a=symbols(:a); b=symbols(:b)\nb\n\njulia> a,b = symbols(\"a b\")\n(a, b)\n\njulia> @vars a b\n(a, b)","category":"page"},{"location":"basicUsage/#Simple-Expressions","page":"Quick Start","title":"Simple Expressions","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"Note that by default, values are grouped but no expansion takes place.","category":"page"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> @vars a b\n(a, b)\n\njulia> ex1 = a + 2(b+2)^2 + 2a + 3(a+1)\n3*a + 3*(1 + a) + 2*(2 + b)^2","category":"page"},{"location":"basicUsage/#Vectors-and-Matrices","page":"Quick Start","title":"Vectors and Matrices","text":"","category":"section"},{"location":"basicUsage/#Definitions-2","page":"Quick Start","title":"Definitions","text":"","category":"section"},{"location":"basicUsage/#Vectors","page":"Quick Start","title":"Vectors","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"Vectors can be defined through list comprehension and string interpolation.","category":"page"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> [symbols(\"α_$i\") for i in 1:3]\n3-element Vector{Basic}:\n α_1\n α_2\n α_3","category":"page"},{"location":"basicUsage/#Matrices","page":"Quick Start","title":"Matrices","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"In an analogous manner, matrices are declared with a combination of string interpolation and matrix comprehension.","category":"page"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> W = [symbols(\"W_$i$j\") for i in 1:3, j in 1:4]\n3×4 Matrix{Basic}:\n W_11  W_12  W_13  W_14\n W_21  W_22  W_23  W_24\n W_31  W_32  W_33  W_34","category":"page"},{"location":"basicUsage/#Matrix-Vector-Operations","page":"Quick Start","title":"Matrix Vector Operations","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"Consider the canonical example of matrix vector multiplication.","category":"page"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> W = [symbols(\"W_$i$j\") for i in 1:3, j in 1:4]\n3×4 Matrix{Basic}:\n W_11  W_12  W_13  W_14\n W_21  W_22  W_23  W_24\n W_31  W_32  W_33  W_34\n \njulia> W*[1.0, 2.0, 3.0, 4.0]\n3-element Vector{Basic}:\n 1.0*W_11 + 2.0*W_12 + 3.0*W_13 + 4.0*W_14\n 1.0*W_21 + 2.0*W_22 + 3.0*W_23 + 4.0*W_24\n 1.0*W_31 + 2.0*W_32 + 3.0*W_33 + 4.0*W_34","category":"page"},{"location":"basicUsage/#Operations","page":"Quick Start","title":"Operations","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"We will demonstrate the most common operations as follows.","category":"page"},{"location":"basicUsage/#Expansion","page":"Quick Start","title":"Expansion","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> @vars a b\n(a, b)\n\njulia> expand(a + 2(b+2)^2 + 2a + 3(a+1))\n11 + 6*a + 8*b + 2*b^2","category":"page"},{"location":"basicUsage/#Substitution","page":"Quick Start","title":"Substitution","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> @vars a b\n(a, b)\n\njulia> subs(a^2+(b-2)^2, b=>a)\na^2 + (-2 + a)^2\n\njulia> subs(a^2+(b-2)^2, b=>2)\na^2\n\njulia> subs(a^2+(b-2)^2, a=>2)\n4 + (-2 + b)^2\n\njulia> subs(a^2+(b-2)^2, a^2=>2)\n2 + (-2 + b)^2\n\njulia> subs(a^2+(b-2)^2, a=>2, b=>3)\n5","category":"page"},{"location":"basicUsage/#Differentiation","page":"Quick Start","title":"Differentiation","text":"","category":"section"},{"location":"basicUsage/","page":"Quick Start","title":"Quick Start","text":"julia> using SymEngine\n\njulia> @vars a b\n(a, b)\n\njulia> diff(a + 2(b+2)^2 + 2a + 3(a+1), b)\n4*(2 + b)","category":"page"}]
}
